#!/usr/bin/make -f
# You must remove unused comment lines for the released package.
export DH_VERBOSE = 1
#export DEB_BUILD_MAINT_OPTIONS = hardening=+all
#export DEB_CFLAGS_MAINT_APPEND  = -Wall -pedantic
#export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed

#include /usr/share/dpkg/architecture.mk
include /usr/share/dpkg/pkg-info.mk

TARGET := arm-none-eabi

TOP_DIR := $(shell pwd)
BUILD_DIR := $(TOP_DIR)/build/
BUILD_NANO_DIR := $(TOP_DIR)/build_nano/
INSTALL_DIR := $(TOP_DIR)/debian/newlib
TMP_NANO_DIR := $(TOP_DIR)/debian/tmp_nano

export CFLAGS=${CFLAGS/-Werror=format-security/}
export CXXFLAGS=${CXXFLAGS/-Werror=format-security/}

CONFIGURE_COMMON_FLAGS = \
	--host=$(DEB_HOST_MULTIARCH) \
	--target=$(TARGET) \
	--prefix=/usr/lib \
	--libdir=/usr/lib \
	--infodir=/usr/share/doc/$(DEB_SOURCE)/info \
	--mandir=/usr/share/man \
	--htmldir=/usr/share/doc/$(DEB_SOURCE)/html \
	--pdfdir=/usr/share/doc/$(DEB_SOURCE)/pdf \
	--with-pkgversion=$(DEB_VERSION) \
	--disable-newlib-supplied-syscalls \
	--disable-nls \
	--enable-libssp \
	--enable-languages=c \
	--with-multilib-list=rmprofile



CONFIGURE_FLAGS = \
	--enable-newlib-io-long-long \
	--enable-newlib-register-fini \
	$(CONFIGURE_COMMON_FLAGS)

CONFIGURE_FLAGS_NANO = \
	--disable-newlib-io-float \
	--disable-newlib-io-long-double \
	--disable-newlib-io-pos-args \
	--disable-newlib-io-c99-formats \
	--disable-newlib-io-long-long \
	--disable-newlib-multithread \
	--disable-newlib-retargetable-locking \
	--disable-newlib-wide-orient \
	--disable-newlib-fseek-optimization \
	--disable-newlib-fvwrite-in-streamio \
	--disable-newlib-unbuf-stream-opt \
	--disable-newlib-atexit-dynamic-alloc \
	--enable-newlib-nano-malloc \
	--enable-newlib-nano-formatted-io \
	--enable-newlib-global-atexit \
	--enable-lite-exit \
	--enable-newlib-reent-small \
	--enable-target-optspace \
	$(CONFIGURE_COMMON_FLAGS)

%:
	dh $@ -B$(BUILD_DIR) --with autoreconf --parallel


upstream-src:
	wget -O /tmp/gcc-13.2.0.tar.xz https://mirrorservice.org/sites/sourceware.org/pub/gcc/releases/gcc-13.2.0/gcc-13.2.0.tar.xz
	wget -O /tmp/newlib-4.3.0.20230120.tar.gz ftp://sourceware.org/pub/newlib/newlib-4.3.0.20230120.tar.gz
	tar -C /tmp -xf /tmp/gcc-13.2.0.tar.xz
	tar -C /tmp -xf /tmp/newlib-4.3.0.20230120.tar.gz
	cp -a /tmp/gcc-13.2.0/* .
	cp -a -n /tmp/newlib-4.3.0.20230120/* .
	tar -C ../ -caf ../newlib_4.3.0.orig.tar.gz --exclude=debian --exclude-vcs ./newlib-4.3.0

override_dh_clean:
	dh_clean
	rm -rf $(BUILD_DIR) $(BUILD_NANO_DIR) $(TMP_NANO_DIR) $(INSTALL_DIR)

override_dh_auto_configure:
	dh_auto_configure -B$(BUILD_DIR) -- $(CONFIGURE_FLAGS)
	dh_auto_configure -B$(BUILD_NANO_DIR) -- $(CONFIGURE_FLAGS_NANO)

override_dh_auto_build:
	dh_auto_build -B$(BUILD_DIR) -- all-target-newlib
	dh_auto_build -B$(BUILD_NANO_DIR) -- all-target-newlib

override_dh_auto_test:
	exit 0
# dh_auto_test -B$(BUILD_DIR)
# dh_auto_test -B$(BUILD_NANO_DIR)

override_dh_auto_install:
	cd $(BUILD_DIR) && $(MAKE) install-target-newlib DESTDIR=$(INSTALL_DIR)
	cd $(BUILD_NANO_DIR) && $(MAKE) install-target-newlib DESTDIR=$(TMP_NANO_DIR)
	#
	# Rename nano lib* files to lib*_nano
	find $(TMP_NANO_DIR) -regex ".*/lib\(c\|g\|rdimon\)\.a" \
		-exec rename 's@$(TMP_NANO_DIR)/(.*).a@$(INSTALL_DIR)/$$1_nano.a@' \{\} \+
	#
	# Move nano's version of newlib.h to nano/newlib.h
	mkdir -p $(INSTALL_DIR)/usr/lib/$(TARGET)/include/nano
	mv $(TMP_NANO_DIR)/usr/lib/$(TARGET)/include/newlib.h \
		$(INSTALL_DIR)/usr/lib/$(TARGET)/include/nano/newlib.h


# override_dh_installchangelogs:
# 	dh_installchangelogs ChangeLog

# override_dh_installdocs:
# 	set -ex; \
# 		cd $(BUILD_DIR)/$(TARGET)/newlib; \
# 		make html-recursive; \
# 		cd -;
# 	dh_installdocs
